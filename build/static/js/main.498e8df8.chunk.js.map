{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.svg"],"names":["App","state","items","loading","todoItem","offline","navigator","onLine","setOfflineStatus","_this","setState","addItem","e","preventDefault","fetch","method","body","JSON","stringify","item","headers","Content-Type","then","response","clone","json","error","alert","deleteItem","itemId","id","res","_this2","this","console","log","window","addEventListener","removeEventListener","_this3","react_default","a","createElement","className","src","logo","alt","onSubmit","placeholder","value","onChange","target","type","length","map","i","key","aria-label","onClick","aria-hidden","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","concat","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.498e8df8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    items: [],\n    loading: true,\n    todoItem: '',\n    offline: !navigator.onLine\n  }\n\n   componentDidMount() {\n    fetch('http://localhost:4567/items.json').then(res => { console.log(res.clone().json()); return  res.clone().json()}).then(items => {\n      console.log(\"thisis from the compopnent\", items);\n      this.setState({items, loading: false})\n    })\n\n    window.addEventListener('online', this.setOfflineStatus)\n    window.addEventListener('offline', this.setOfflineStatus)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('online', this.setOfflineStatus)\n    window.removeEventListener('offline', this.setOfflineStatus)\n  }\n\n  setOfflineStatus = () => {\n    this.setState({ offline: !navigator.onLine})\n  }\n\n  addItem = (e) => {\n    e.preventDefault()\n\n    fetch('http://localhost:4567/items.json',{\n      method: 'POST',\n      body: JSON.stringify({item: this.state.todoItem}),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.clone().json()).then(items => {\n      if(items.error){\n        alert(items.error)\n      } else {\n        this.setState({\n          items,todoItem:''\n        })\n      }\n    })\n\n    this.setState({todoItem: ''})\n  }\n\n  deleteItem = (itemId) => {\n    fetch('/items.json',{\n      method: 'Delete',\n      body:JSON.stringify({id:itemId}),\n      headers:{\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json())\n    .then(items => {\n      if(items.error){\n        alert(items.error)\n      } else {\n        this.setState({ items})\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <nav className=\"navbar navbar-light bg-light\">\n          <span className=\"navbar-brand mb-0 h1\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            Todo List\n          </span>\n          {\n            this.state.offline && <span className= \"badge badge-danger my-3\">offline</span>\n          }\n        </nav>\n\n        <div className=\"px-3 py-2\">\n\n          <form className=\"form-inline my-3\" onSubmit={this.addItem}>\n            <div className=\"form-group mb-2 p-0 pr-3 col-8 col-sm-10\">\n              <input \n              className=\"form-control col-12\"\n              placeholder=\"What do you need to do?\"\n              value={this.state.todoItem}\n              onChange={e=> this.setState({\n                todoItem:e.target.value\n              })}\n              />\n            </div>\n            <button\n            type=\"submit\"\n            className=\"btn btn-primary mb-2 col-4 col-sm-2\">\n              Add\n            </button>\n          </form>\n          {this.state.loading && <p>Loading...</p>}\n\n          {\n            !this.state.loading && this.state.items.length === 0 &&\n            <div className=\"alert alert-secondary\">\n              NO-items -all done\n            </div>\n          }\n\n          {\n            !this.state.loading && this.state.items && \n            <table className=\"table table-striped\">\n              <tbody>\n                {\n                  this.state.items.map((item,i)=>{\n                    return (\n                      <tr key={item.id} className=\"row\">\n                        <td className=\"col-1\">{i+1}</td>\n                        <td className=\"col-10\">{item.item}</td>\n                        <td className=\"col-1\">\n                          <button\n                          type=\"button\"\n                          className=\"close\"\n                          aria-label=\"Close\"\n                          onClick={() => this.deleteItem(item.id)}>\n                            <span aria-hidden=\"true\">&times;</span>\n                          </button>\n                        </td>\n                      </tr>\n                    )\n                  })\n                }\n              </tbody>\n            </table>\n          }\n        </div>\n\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}