{"version":3,"sources":["logo.svg","serviceWorker.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","global","d","__webpack_exports__","register","isLocalhost","Boolean","window","location","hostname","match","config","navigator","URL","process","href","origin","addEventListener","swUrl","concat","fetch","then","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","App","items","loading","todoItem","offline","onLine","setOfflineStatus","_this","setState","addItem","e","preventDefault","method","body","JSON","stringify","item","Content-Type","clone","json","alert","deleteItem","itemId","id","res","_this2","this","removeEventListener","_this3","react_default","a","createElement","className","src","logo","alt","onSubmit","placeholder","value","onChange","target","type","length","map","i","key","aria-label","onClick","aria-hidden","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.32edf80b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n\n      global.registration = registration\n      \n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\n// function urlBase64ToUint8Array(base64String) {\n//   var padding = '='.repeat((4 - base64String.length % 4) % 4);\n//   var base64 = (base64String + padding)\n//       .replace(/\\-/g, '+')\n//       .replace(/_/g, '/');\n\n//   var rawData = window.atob(base64);\n//   var outputArray = new Uint8Array(rawData.length);\n\n//   for (var i = 0; i < rawData.length; ++i) {\n//       outputArray[i] = rawData.charCodeAt(i);\n//   }\n//   return outputArray;\n// }\n\n// class Profile extends Component {\n  \n//   state = {\n//     image: null,\n//     supportsCamera: 'mediaDevices' in navigator\n//   }\n\n//   changeImage = (e) => {\n//     this.setState({\n//       image:URL.createObjectURL(e.target.files[0])\n//     })\n//   }\n\n//   startChangeImage = () => {\n//     this.setState({ enableCamera: !this.state.enableCamera})\n//   }\n\n//   takeImage = () => {\n//     this._canvas.width = this._video.videoWidth\n//     this._canvas.height = this._video.videoHeight\n//     this._canvas.getContext('2d').drawImage(\n//       this._video,\n//       0,0,\n//       this._video.videoWidth,\n//       this._video.videoHeight\n//     )\n//     this._video.srcObject.getVideoTracks().forEach(track => {\n//       track.stop()\n//     });\n\n//     this.setState({\n//       image: this._canvas.toDataURL(),\n//       enableCamera: false\n//     })\n//   }\n\n//   subscribe = () => {\n//     const key = \"BC3CER1U3cdOr5Qau5QKJOM0n6IEpnr4ysG1G7E5rN12g9c-ydOnzIHg-AciSLwxCzfbpQhpPBmdyqiH52FzzjI\"\n\n//     global.registration.pushManager.subscribe({\n//       userVisibleOnly: true,\n//       applicationServerKey: urlBase64ToUint8Array(key)\n//     }).then( sub => {\n//       console.log(\"Subscribed\")\n//     }).catch(err => {\n//       console.log(\"Did not Subscribed\")\n//     })\n//   }\n\n\n//   render(){\n//     return (\n//       <div>\n//         <nav className=\"navbar navbar-light bg-light\">\n//           <span className=\"navbar-branc mb-0 h1\">\n//             <Link to=\"/\">\n//               <img src={Back} alt=\"logo\" style={{height:30}} />\n//             </Link>\n//             Profile\n//           </span>\n//         </nav>\n  \n//         <div style={{ textAligh: \"center\"}}>\n//           <img src={this.state.image || GreyProfile} alt=\"profile\"\n//           style={{height:200, marginTop: 50}} />\n//           <p style={{color: '#888, fontSize:20'}}>username</p>\n\n//           {\n//             this.state.enableCamera && \n//             <div>\n//               <video \n//               ref={c => {\n//                 this._video = c\n//                 if(this._video) {\n//                   navigator.mediaDevices.getUserMedia({video: true})\n//                     .then(stream => this._video.srcObject = stream)\n//                 }\n//               }}\n//               controls={false}\n//               autoPlay\n//               style={{width: '100%', maxWidth:300}}></video>\n\n//               <br />\n//               <button\n//               onClick={this.takeImage}\n//               >Take Image </button>\n\n//               <canvas \n//               ref={c => this._canvas =c}\n//               style={{display: 'none'}} />\n//             </div>\n//           }\n  \n//           <br />\n//           {\n//             this.state.supportsCamera && \n//             <button\n//             onClick={this.startChangeImage}\n//             >\n//               Toggle Camera\n//             </button>\n//           }\n\n//           <br />\n//           <button onClick={this.subscribe}>Subscribe for Notifications</button>\n//         </div>\n//       </div>\n\n//     )\n\n//   }\n// }\n\nclass App extends Component {\n\n  state = {\n    items: [],\n    loading: true,\n    todoItem: '',\n    offline: !navigator.onLine\n  }\n\n   componentDidMount() {\n    fetch('https://todoserverpwafirstofmine.herokuapp.com/items.json').then(res => { console.log(res.clone().json()); return  res.clone().json()}).then(items => {\n      console.log(\"thisis from the compopnent\", items);\n      this.setState({items, loading: false})\n    })\n\n    window.addEventListener('online', this.setOfflineStatus)\n    window.addEventListener('offline', this.setOfflineStatus)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('online', this.setOfflineStatus)\n    window.removeEventListener('offline', this.setOfflineStatus)\n  }\n\n  setOfflineStatus = () => {\n    this.setState({ offline: !navigator.onLine})\n  }\n\n  addItem = (e) => {\n    e.preventDefault()\n\n    fetch('https://todoserverpwafirstofmine.herokuapp.com/items.json',{\n      method: 'POST',\n      body: JSON.stringify({item: this.state.todoItem}),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.clone().json()).then(items => {\n      if(items.error){\n        alert(items.error)\n      } else {\n        this.setState({\n          items,todoItem:''\n        })\n      }\n    })\n\n    this.setState({todoItem: ''})\n  }\n\n  deleteItem = (itemId) => {\n    fetch('https://todoserverpwafirstofmine.herokuapp.com/items.json',{\n      method: 'Delete',\n      body:JSON.stringify({id:itemId}),\n      headers:{\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json())\n    .then(items => {\n      if(items.error){\n        alert(items.error)\n      } else {\n        this.setState({ items})\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <nav className=\"navbar navbar-light bg-light\">\n          <span className=\"navbar-brand mb-0 h1\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            Todo List\n          </span>\n          {\n            this.state.offline && <span className= \"badge badge-danger my-3\">offline</span>\n          }\n        </nav>\n\n        <div className=\"px-3 py-2\">\n\n          <form className=\"form-inline my-3\" onSubmit={this.addItem}>\n            <div className=\"form-group mb-2 p-0 pr-3 col-8 col-sm-10\">\n              <input \n              className=\"form-control col-12\"\n              placeholder=\"What do you need to do?\"\n              value={this.state.todoItem}\n              onChange={e=> this.setState({\n                todoItem:e.target.value\n              })}\n              />\n            </div>\n            <button\n            type=\"submit\"\n            className=\"btn btn-primary mb-2 col-4 col-sm-2\">\n              Add\n            </button>\n          </form>\n          {this.state.loading && <p>Loading...</p>}\n\n          {\n            !this.state.loading && this.state.items.length === 0 &&\n            <div className=\"alert alert-secondary\">\n              NO-items -all done\n            </div>\n          }\n\n          {\n            !this.state.loading && this.state.items && \n            <table className=\"table table-striped\">\n              <tbody>\n                {\n                  this.state.items.map((item,i)=>{\n                    return (\n                      <tr key={item.id} className=\"row\">\n                        <td className=\"col-1\">{i+1}</td>\n                        <td className=\"col-10\">{item.item}</td>\n                        <td className=\"col-1\">\n                          <button\n                          type=\"button\"\n                          className=\"close\"\n                          aria-label=\"Close\"\n                          onClick={() => this.deleteItem(item.id)}>\n                            <span aria-hidden=\"true\">&times;</span>\n                          </button>\n                        </td>\n                      </tr>\n                    )\n                  })\n                }\n              </tbody>\n            </table>\n          }\n        </div>\n\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}